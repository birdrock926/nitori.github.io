---
import type { Media } from '@lib/strapi';
const { items = [] } = Astro.props as {
  items?: { image: Media; alt?: string; displayMode?: 'auto' | 'image' | 'gif' }[];
};
---
{items.length > 0 && (
  <section class="card gallery" style="gap: 0.75rem;">
    <div class="grid gallery-grid">
      {items.map((item, index) => {
        const mode = item.displayMode ?? 'auto';
        const mime = item.image?.mime?.toLowerCase() ?? '';
        const isGif =
          mode === 'gif' || (mode === 'auto' && (mime === 'image/gif' || item.image.url?.toLowerCase().endsWith('.gif')));
        const src = item.image?.formats?.medium?.url ?? item.image.url;
        const srcset = isGif
          ? undefined
          : [
              item.image.formats?.thumbnail?.url ? `${item.image.formats.thumbnail.url} 150w` : null,
              item.image.formats?.small?.url ? `${item.image.formats.small.url} 320w` : null,
              item.image.formats?.medium?.url ? `${item.image.formats.medium.url} 640w` : null,
              item.image.url ? `${item.image.url} ${item.image.width ?? 1024}w` : null,
            ]
              .filter(Boolean)
              .join(', ');
        const alt = item.alt ?? item.image.alternativeText ?? '';
        return (
          <figure class="gallery-item" key={item.image?.url ?? `gallery-${index}`}>
            <img
              src={src}
              srcset={srcset}
              sizes="(max-width: 600px) 65vw, (max-width: 1024px) 33vw, 220px"
              alt={alt}
              loading="lazy"
              decoding="async"
              data-animated={isGif ? 'true' : 'false'}
            />
          </figure>
        );
      })}
    </div>
  </section>
)}

<style>
  :global(.gallery) {
    max-width: min(760px, 100%);
    margin: 1.5rem auto;
    padding: 1.5rem 1rem;
  }

  :global(.gallery-grid) {
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 0.75rem;
  }

  :global(.gallery-item) {
    margin: 0;
    display: grid;
    gap: 0.5rem;
  }

  :global(.gallery-item img) {
    width: 100%;
    height: auto;
    border-radius: 0.75rem;
    object-fit: cover;
    display: block;
  }

</style>
