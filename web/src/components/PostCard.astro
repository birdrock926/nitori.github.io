---
import type { Post } from '@lib/strapi';
import { formatDateTime, relative, toMultilineHtml } from '@lib/format';

const { post } = Astro.props as { post: Post };
const coverImage = post.cover;

const coverSources = [
  coverImage?.formats?.medium?.url && {
    media: '(min-width: 960px)',
    srcSet: coverImage.formats.medium.url,
  },
  coverImage?.formats?.small?.url && {
    media: '(min-width: 600px)',
    srcSet: coverImage.formats.small.url,
  },
].filter(Boolean) as Array<{ media: string; srcSet: string }>;

const coverSrc =
  coverImage?.formats?.thumbnail?.url ?? coverImage?.formats?.small?.url ?? coverImage?.url ?? '';

const coverSrcSet = [
  coverImage?.formats?.thumbnail?.url && `${coverImage.formats.thumbnail.url} 150w`,
  coverImage?.formats?.small?.url && `${coverImage.formats.small.url} 480w`,
  coverImage?.formats?.medium?.url && `${coverImage.formats.medium.url} 768w`,
  coverImage?.url && `${coverImage.url} 1200w`,
]
  .filter(Boolean)
  .join(', ');

const coverSizes = '(min-width: 1280px) 320px, (min-width: 768px) 45vw, 92vw';
const coverAlt = coverImage?.alternativeText ?? post.title;
---
<article class="post-card card hover-lift">
  {coverImage?.url && (
    <a class="post-card-cover" href={`/posts/${post.slug}/`} aria-hidden="true" tabindex="-1">
      <picture>
        {coverSources.map((source) => (
          <source srcSet={source.srcSet} media={source.media} />
        ))}
        <img
          src={coverSrc}
          srcSet={coverSrcSet || undefined}
          sizes={coverSrcSet ? coverSizes : undefined}
          alt={coverAlt}
          loading="lazy"
          decoding="async"
        />
      </picture>
    </a>
  )}
  <header class="post-card-meta">
    <time dateTime={post.publishedAt} class="muted">
      {formatDateTime(post.publishedAt)}（{relative(post.publishedAt)}）
    </time>
    <div class="post-card-tags" role="list">
      {post.tags.map((tag) => (
        <a class="tag-chip" role="listitem" href={`/tags/${tag.slug}/`}>
          {tag.name}
        </a>
      ))}
    </div>
  </header>
  <h3 class="post-card-title"><a href={`/posts/${post.slug}/`}>{post.title}</a></h3>
  <p class="post-card-summary muted" set:html={toMultilineHtml(post.summary)}></p>
  <a class="post-card-link" href={`/posts/${post.slug}/`}>
    続きを読む<span aria-hidden="true">→</span>
  </a>
</article>
