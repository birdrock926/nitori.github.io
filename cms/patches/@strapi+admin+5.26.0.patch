diff --git a/node_modules/@strapi/admin/package.json b/node_modules/@strapi/admin/package.json
index 2fe2c2a..3df23ec 100644
--- a/node_modules/@strapi/admin/package.json
+++ b/node_modules/@strapi/admin/package.json
@@ -23,35 +23,35 @@
     "./strapi-admin": {
       "types": "./dist/admin/src/index.d.ts",
       "source": "./admin/src/index.ts",
-      "import": "./dist/admin/index.mjs",
+      "import": "./dist/admin/index.js",
       "require": "./dist/admin/index.js",
       "default": "./dist/admin/index.js"
     },
     "./strapi-admin/ee": {
       "types": "./dist/admin/src/ee.d.ts",
       "source": "./admin/src/ee.ts",
-      "import": "./dist/admin/ee.mjs",
+      "import": "./dist/admin/ee.js",
       "require": "./dist/admin/ee.js",
       "default": "./dist/admin/ee.js"
     },
     "./strapi-admin/test": {
       "types": "./dist/admin/tests/index.d.ts",
       "source": "./admin/tests/index.ts",
-      "import": "./dist/admin/test.mjs",
+      "import": "./dist/admin/test.js",
       "require": "./dist/admin/test.js",
       "default": "./dist/admin/test.js"
     },
     "./_internal": {
       "types": "./dist/_internal/index.d.ts",
       "source": "./_internal/index.ts",
-      "import": "./dist/_internal.mjs",
+      "import": "./dist/_internal.js",
       "require": "./dist/_internal.js",
       "default": "./dist/_internal.js"
     },
     "./strapi-server": {
       "types": "./dist/server/src/index.d.ts",
       "source": "./server/src/index.js",
-      "import": "./dist/server/index.mjs",
+      "import": "./dist/server/index.js",
       "require": "./dist/server/index.js",
       "default": "./dist/server/index.js"
     },
diff --git a/node_modules/@strapi/admin/dist/admin/ee.js b/node_modules/@strapi/admin/dist/admin/ee.js
index 753c93d..05a1a05 100644
--- a/node_modules/@strapi/admin/dist/admin/ee.js
+++ b/node_modules/@strapi/admin/dist/admin/ee.js
@@ -1,5 +1,57 @@
 'use strict';
 
+function __birdrockEnsureStyled(specifier) {
+  try {
+    var exports = require(specifier);
+    var target = exports;
+    if (target && typeof target !== 'function') {
+      var maybe = target.default || target.styled;
+      if (typeof maybe === 'function') {
+        target = maybe;
+      }
+    }
+    if (typeof target !== 'function') {
+      return;
+    }
+    var source = exports;
+    if (source && target !== source && (typeof source === 'object' || typeof source === 'function')) {
+      var keys = Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source));
+      for (var idx = 0; idx < keys.length; idx += 1) {
+        var key = keys[idx];
+        if (key === 'default' || key === 'styled') {
+          continue;
+        }
+        try {
+          var descriptor = Object.getOwnPropertyDescriptor(source, key);
+          if (descriptor) {
+            Object.defineProperty(target, key, descriptor);
+          }
+        } catch (copyError) {
+          // ignore descriptor copy errors
+        }
+      }
+    }
+    try {
+      target.styled = target;
+    } catch (styledWriteError) {}
+    try {
+      target.default = target;
+    } catch (defaultWriteError) {}
+    try {
+      target.__esModule = true;
+    } catch (flagWriteError) {}
+    try {
+      var resolved = require.resolve(specifier);
+      if (require.cache && require.cache[resolved]) {
+        require.cache[resolved].exports = target;
+      }
+    } catch (resolveError) {}
+  } catch (error) {}
+}
+
+__birdrockEnsureStyled('styled-components');
+__birdrockEnsureStyled('strapi-plugin-comments/node_modules/styled-components');
+
 var useLicenseLimits = require('./ee/admin/src/hooks/useLicenseLimits.js');
 var useEnterprise = require('./admin/src/hooks/useEnterprise.js');
 var ai = require('./ee/admin/src/services/ai.js');
diff --git a/node_modules/@strapi/admin/dist/admin/index.js b/node_modules/@strapi/admin/dist/admin/index.js
index 5c1b386..24e5157 100644
--- a/node_modules/@strapi/admin/dist/admin/index.js
+++ b/node_modules/@strapi/admin/dist/admin/index.js
@@ -1,5 +1,68 @@
 'use strict';
 
+
+function __birdrockEnsureStyled(specifier) {
+  try {
+    var exports = require(specifier);
+    var target = exports;
+    if (target && typeof target !== 'function') {
+      var maybe = target.default || target.styled;
+      if (typeof maybe === 'function') {
+        target = maybe;
+      }
+    }
+    if (typeof target !== 'function') {
+      return;
+    }
+    var source = exports;
+    if (source && target !== source && (typeof source === 'object' || typeof source === 'function')) {
+      var keys = Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source));
+      for (var idx = 0; idx < keys.length; idx += 1) {
+        var key = keys[idx];
+        if (key === 'default' || key === 'styled') {
+          continue;
+        }
+        try {
+          var descriptor = Object.getOwnPropertyDescriptor(source, key);
+          if (descriptor) {
+            Object.defineProperty(target, key, descriptor);
+          }
+        } catch (copyError) {
+          // ignore descriptor copy errors
+        }
+      }
+    }
+    try {
+      target.styled = target;
+    } catch (styledWriteError) {
+      // ignore write failures
+    }
+    try {
+      target.default = target;
+    } catch (defaultWriteError) {
+      // ignore write failures
+    }
+    try {
+      target.__esModule = true;
+    } catch (flagWriteError) {
+      // ignore write failures
+    }
+    try {
+      var resolved = require.resolve(specifier);
+      if (require.cache && require.cache[resolved]) {
+        require.cache[resolved].exports = target;
+      }
+    } catch (resolveError) {
+      // ignore cache resolution issues
+    }
+  } catch (error) {
+    // ignore missing styled-components installations
+  }
+}
+
+__birdrockEnsureStyled('styled-components');
+__birdrockEnsureStyled('strapi-plugin-comments/node_modules/styled-components');
+
 var render = require('./admin/src/render.js');
 var BackButton = require('./admin/src/features/BackButton.js');
 var ConfirmDialog = require('./admin/src/components/ConfirmDialog.js');
diff --git a/node_modules/@strapi/admin/dist/admin/test.js b/node_modules/@strapi/admin/dist/admin/test.js
index 6ce06bc..f149320 100644
--- a/node_modules/@strapi/admin/dist/admin/test.js
+++ b/node_modules/@strapi/admin/dist/admin/test.js
@@ -1,5 +1,49 @@
 'use strict';
 
+function __birdrockEnsureStyled(specifier) {
+  try {
+    var exports = require(specifier);
+    var target = exports;
+    if (target && typeof target !== 'function') {
+      var maybe = target.default || target.styled;
+      if (typeof maybe === 'function') {
+        target = maybe;
+      }
+    }
+    if (typeof target !== 'function') {
+      return;
+    }
+    var source = exports;
+    if (source && target !== source && (typeof source === 'object' || typeof source === 'function')) {
+      var keys = Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source));
+      for (var idx = 0; idx < keys.length; idx += 1) {
+        var key = keys[idx];
+        if (key === 'default' || key === 'styled') {
+          continue;
+        }
+        try {
+          var descriptor = Object.getOwnPropertyDescriptor(source, key);
+          if (descriptor) {
+            Object.defineProperty(target, key, descriptor);
+          }
+        } catch (copyError) {}
+      }
+    }
+    try { target.styled = target; } catch (styledWriteError) {}
+    try { target.default = target; } catch (defaultWriteError) {}
+    try { target.__esModule = true; } catch (flagWriteError) {}
+    try {
+      var resolved = require.resolve(specifier);
+      if (require.cache && require.cache[resolved]) {
+        require.cache[resolved].exports = target;
+      }
+    } catch (resolveError) {}
+  } catch (error) {}
+}
+
+__birdrockEnsureStyled('styled-components');
+__birdrockEnsureStyled('strapi-plugin-comments/node_modules/styled-components');
+
 var utils = require('./admin/tests/utils.js');
 var react = require('@testing-library/react');
 var server = require('./admin/tests/server.js');
